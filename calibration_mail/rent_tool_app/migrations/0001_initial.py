# Generated by Django 5.1.4 on 2025-02-04 11:39

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('country', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('id', models.CharField(editable=False, max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the device', max_length=255)),
                ('serial_number', models.CharField(help_text='Unique serial number of the device', max_length=100, unique=True)),
                ('manufacturer', models.CharField(help_text='Manufacturer of the device', max_length=255)),
                ('model_number', models.CharField(help_text='Model number of the device', max_length=100)),
                ('warranty_expiry_date', models.DateField(help_text='Date when the device warranty expires')),
                ('calibration_required', models.BooleanField(default=False, help_text='Whether the device requires calibration')),
                ('is_calibrating', models.BooleanField(default=False, help_text='Whether the device is currently being calibrated')),
                ('last_calibration_date', models.DateField(help_text='Date of the last calibration')),
                ('calibration_due_date', models.DateField(blank=True, help_text='Next due date for calibration', null=True)),
                ('calibration_interval', models.PositiveIntegerField(default=24, help_text='Calibration interval in months', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(48)])),
                ('is_available', models.BooleanField(default=True, help_text='Whether the device is available to use it')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the device was added to the system')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the device was last updated')),
                ('controlled_by', models.ForeignKey(blank=True, help_text='User responsible for controlling the device', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(help_text='Current location of the device', on_delete=django.db.models.deletion.CASCADE, to='rent_tool_app.location')),
            ],
        ),
    ]
